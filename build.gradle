buildscript {
    repositories {
        mavenCentral()
        maven { url 'https://repo.spring.io/snapshot' }
        maven { url 'https://repo.spring.io/libs-snapshot' }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:2.0.3.RELEASE")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

jar {
    baseName = 'gs-rest-service'
    version =  '0.1.0'
}

repositories {
    mavenCentral()
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    compile('org.springframework.boot:spring-boot-starter-data-mongodb')
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('org.springframework.boot:spring-boot-starter-tomcat')
    compile('org.springframework.boot:spring-boot-starter-security')
    compile('org.springframework:spring-webmvc')
    compile('com.fasterxml.jackson.datatype:jackson-datatype-jdk8:2.9.3')
    compile(group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.9.6')
    compile(group: 'joda-time', name: 'joda-time', version: '2.10')
    testCompile(group: 'org.slf4j', name: 'slf4j-simple', version: '1.7.6')
    testCompile('junit:junit')
}

task wrapper(type: Wrapper) {
    gradleVersion = '4.0'
}


task stage(type: Copy, dependsOn: [clean, build]) {
    from jar.archivePath
    into project.rootDir
    rename {
        'app.jar'
    }
}
stage.mustRunAfter(clean)

clean << {
    project.file('app.jar').delete()
}